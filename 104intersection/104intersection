#!/usr/bin/env python3
##
## EPITECH PROJECT, 2018
## 104intersection
## File description:
## 104intersection
##

import sys
import math
from math import *

if len(sys.argv) == 2:
    if sys.argv[1] == "-h":
        print("USAGE")
        print("\t./104intersection opt xp yp zp xv yv zv p")
        print("")
        print("DESCRIPTION")
        print("\topt\tsurface option: 1 for a sphere, 2 for a cylinder, 3 for a cone")
        print("\t(xp, yp, zp)\tcoordinates of a point by which the light ray passes through")
        print("\t(xv, yv, zv)\tcoordinates of a vector parallel to the light ray")
        print("\tp\tparameter: radius of the sphere, radius of the cylinder, or angle formed by the cone and the Z-axis")
        exit (0)
    else:
        exit (84)
if len(sys.argv) != 9:
    exit (84)
if sys.argv[1] != "1" and sys.argv[1] != "2" and sys.argv[1] != "3":
    exit (84)
if int(sys.argv[1]) == "3":
    if (int)(sys.argv[8]) > 180:
        exit (84)
if int(sys.argv[8]) < 0:
    exit (84)
if int(sys.argv[8]) > 360:
    exit (84)
i = 1
k = 0
while i != 8:
    while len(sys.argv[i]) != k:
        if sys.argv[i][k] != "1":
            if sys.argv[i][k] != "2":
                if sys.argv[i][k] != "3":
                    if sys.argv[i][k] != "4":
                        if sys.argv[i][k] != "5":
                            if sys.argv[i][k] != "6":
                                if sys.argv[i][k] != "7":
                                    if sys.argv[i][k] != "8":
                                        if sys.argv[i][k] != "9":
                                            if sys.argv[i][k] != "0":
                                                if sys.argv[i][k] != "-":
                                                    exit (84)
        k = k + 1
    i = i + 1
    k = 0
if sys.argv[1] == "1":
    print("Sphere of radius " + sys.argv[8])
    a = ((float)(sys.argv[5]) * (float)(sys.argv[5])) + ((float)(sys.argv[6]) * (float)(sys.argv[6])) + ((float)(sys.argv[7]) * (float)(sys.argv[7]))
    b = (2 * (float)(sys.argv[2]) * (float)(sys.argv[5])) + (2 * (float)(sys.argv[3]) * (float)(sys.argv[6])) + (2 * (float)(sys.argv[4]) * (float)(sys.argv[7]))
    c = ((float)(sys.argv[2]) * (float)(sys.argv[2])) + ((float)(sys.argv[3]) * (float)(sys.argv[3])) + ((float)(sys.argv[4]) * (float)(sys.argv[4])) - ((float)(sys.argv[8]) * (float)(sys.argv[8]))
if sys.argv[1] == "2":
    print("Cylinder of radius " + sys.argv[8])
    a = (float)(sys.argv[5]) * (float)(sys.argv[5]) + (float)(sys.argv[6]) * (float)(sys.argv[6])
    b = (2 * (float)(sys.argv[2]) * (float)(sys.argv[5])) + (2 * (float)(sys.argv[3]) * (float)(sys.argv[6]))
    c = (float)(sys.argv[2]) * (float)(sys.argv[2]) + (float)(sys.argv[3]) * (float)(sys.argv[3]) - (float)(sys.argv[8]) * (float)(sys.argv[8])
if sys.argv[1] == "3":
    print("Cone with a " + sys.argv[8] + " degree angle")
    a = (float)(sys.argv[5]) * (float)(sys.argv[5]) + (float)(sys.argv[6]) * (float)(sys.argv[6]) - ((float)(sys.argv[7]) * (float)(sys.argv[7]) * math.tan(radians((float)(sys.argv[8]))) * math.tan(radians((float)(sys.argv[8]))))
    b = (2 * (float)(sys.argv[5]) * (float)(sys.argv[2])) + (2 * (float)(sys.argv[3]) * (float)(sys.argv[6])) - (2 * (float)(sys.argv[7]) * (float)(sys.argv[4]) * math.tan(radians((float)(sys.argv[8]))) * math.tan(radians((float)(sys.argv[8]))))
    c = (float)(sys.argv[2]) * (float)(sys.argv[2]) + (float)(sys.argv[3]) * (float)(sys.argv[3]) - ((float)(sys.argv[4]) * (float)(sys.argv[4]) * math.tan(radians((float)(sys.argv[8]))) * math.tan(radians((float)(sys.argv[8]))))
print("Line passing through the point (" + sys.argv[2] + ", " + sys.argv[3] + ", " + sys.argv[4] + ") and parallel to the vector (" + sys.argv[5] + ", " + sys.argv[6] + ", " + sys.argv[7] + ")")

delta = (b * b) - 4 * a * c

if sys.argv[1] == "2" and delta == 0:
    if a == 0:
        print("There is an infinite number of intersection points.")
        exit (0)
if delta < 0:
    print("No intersection point.")
    exit (0)
if delta == 0:
    nbr_intersection = 1
    print("%d" % nbr_intersection + " intersection point:")
if delta > 0:
    nbr_intersection = 2
    print("%d" % nbr_intersection + " intersection point:")
if nbr_intersection == 1:
    x1 = -b / (2 * a)
    result1 = (float)(sys.argv[2]) + x1 * (float)(sys.argv[5]);
    result2 = (float)(sys.argv[3]) + x1 * (float)(sys.argv[6]);
    result3 = (float)(sys.argv[4]) + x1 * (float)(sys.argv[7]);
    print("(%0.3f, " % result1 + "%0.3f, " % result2 + "%0.3f)" % result3)
if nbr_intersection == 2:
    x1 = ((-b) + math.sqrt(delta)) / (2 * a)
    x2 = ((-b) - math.sqrt(delta)) / (2 * a)
    result1 = ((float)(sys.argv[2]) + x1 * (float)(sys.argv[5]));
    result2 = ((float)(sys.argv[3]) + x1 * (float)(sys.argv[6]));
    result3 = ((float)(sys.argv[4]) + x1 * (float)(sys.argv[7]));
    result4 = ((float)(sys.argv[2]) + x2 * (float)(sys.argv[5]));
    result5 = ((float)(sys.argv[3]) + x2 * (float)(sys.argv[6]));
    result6 = ((float)(sys.argv[4]) + x2 * (float)(sys.argv[7]));
    print("(%0.3f, " % result1 + "%0.3f, " % result2 + "%0.3f)" % result3)
    print("(%0.3f, " % result4 + "%0.3f, " % result5 + "%0.3f)" % result6)
