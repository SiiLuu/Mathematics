#!/usr/bin/env python3

import  sys
import  math

def errors():
    if (len(sys.argv) < 3 or len(sys.argv) > 5):
        sys.exit(84)
    if (not sys.argv[1].isdigit() or not sys.argv[2].isdigit()):
        sys.exit(84)
    if (int(sys.argv[1]) < 0 or int(sys.argv[1]) > 200):
        sys.exit(84)
    if (len(sys.argv) == 4):
        if (not sys.argv[3].isdigit()):
            sys.exit(84)
        if (int(sys.argv[3]) < 0 or int(sys.argv[3]) > 200):
            sys.exit(84)
    if (len(sys.argv) == 5):
        if (not sys.argv[4].isdigit()):
            sys.exit(84)
        if (int(sys.argv[4]) < 0 or int(sys.argv[4]) > 200):
            sys.exit(84)
        if (int(sys.argv[4]) < int(sys.argv[3])):
            sys.exit(84)

def funcIq(mean, std):
    i = 0
    res = 0

    while i <= 200:
        res = 1 / (std * math.sqrt(2 * math.pi)) * math.exp(-math.pow(i - mean, 2) / (2 * pow(std, 2)))
        print("%i %.5f" % (i, res))
        i += 1

def inf(mean, std, iq):
    i = 0
    res = 0

    while i < iq:
        res += 1 / (std * math.sqrt(2 * math.pi)) * math.exp(-math.pow(i - mean, 2) / (2 * pow(std, 2)))
        i += 0.01
    print("%.1f%% of people have an IQ inferior to %i" % (res, iq))

def gap(mean, std, iq, iqmax):
    i = iq
    res = 0

    while i < iqmax:
        res += 1 / (std * math.sqrt(2 * math.pi)) * math.exp(-math.pow(i - mean, 2) / (2 * pow(std, 2)))
        i += 0.01
    print("%.1f%% of people have an IQ between %i and %i" % (res, iq, iqmax))

def help():
    print("USAGE")
    print("\t./205IQ u s [IQ1] [IQ2]\n")
    print("DESCRIPTION")
    print("\tu\tmean")
    print("\ts\tstandard deviation")
    print("\tIQ1\tminimum IQ")
    print("\tIQ2\tmaximum IQ")

def main():
    if (len(sys.argv) == 2 and sys.argv[1] == "-h"):
        help()
    errors()
    if (len(sys.argv) == 3):
        funcIq(int(sys.argv[1]), int(sys.argv[2]))
    if (len(sys.argv) == 4):
        inf(int(sys.argv[1]), int(sys.argv[2]), int(sys.argv[3]))
    if (len(sys.argv) == 5):
        gap(int(sys.argv[1]), int(sys.argv[2]), int(sys.argv[3]), int(sys.argv[4]))

if __name__ == "__main__":
    main()
