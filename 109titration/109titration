#!/usr/bin/env python3
##
## 109titration
##

import sys
import math

class InvalidFile(Exception):
    def __init__(self, msg):
        print(msg, file=sys.stderr)
        Exception.__init__(self, msg)
        sys.exit(84)

if ("-h" in sys.argv):
    print("USAGE\n" "    " "./109titration" ' file\n' 'DESCRIPTION\n'
      '    file    a csv file containing "vol;ph" lines')
    sys.exit(0)
if (len(sys.argv) != 2):
    sys.exit(84)
try:
    with open(sys.argv[1]) as fd:
        tab = fd.readlines()
        try:
            for i in range(len(tab)):
                tab[i] = tab[i].strip('\n').split(';')
                tab[i][0] = float(tab[i][0])
                tab[i][1] = float(tab[i][1])
                if (len(tab[i]) != 2):
                    raise IndexError
        except (ValueError, IndexError):
            sys.exit(84)
    if (len(tab) <= 4):
        raise InvalidFile("Not enough data in file")
except (PermissionError, FileNotFoundError) as e:
    sys.exit(84)
else:
    x = 0.0
    array = []
    y = 0
    z = 1
    print("Derivative:")
    array.append(0)
    for i in range(1, len(tab) - 1):
        array.append((tab[i + 1][1] - tab[i - 1][1]) / (tab[i + 1][0] - tab[i - 1][0]))
        print("%.1f ml -> %.2f" % (tab[i][0], array[i]))
        if (x < array[i]):
            x = array[i]
            z = tab[i][0]
            y = i
    array.append(0)
    print("\n" "Equivalent point at %.1f ml\n" % z)
    print("Second derivative:")
    for i in range(1, len(array) - 3):
        d = (array[i + 2] - array[i]) / (tab[i + 2][0] - tab[i][0])
        print("%.1f ml -> %.2f" % (tab[i + 1][0], d))
    print("\nSecond derivative estimated:")
    e = z
    f = 0
    if (y - 2 < 0):
        i = tab[y - 1][0]
        d = h = 0
    else:
        i = tab[y - 1][0]
        d = h = (array[y] - array[y - 2]) / (tab[y][0] - tab[y - 2][0])
    g = (array[y + 1] - array[y - 1]) / (tab[y + 1][0] - tab[y - 1][0])
    j = (g - h) / (10 * (tab[y][0] - tab[y - 1][0]))
    while (i - 0.05 < tab[y][0]):
        print("%.1f ml -> %.2f" % (i, h))
        if (math.fabs(d) > math.fabs(h) and y - 1 > 0):
            d = h
            e = i
        h = h + j
        i = i + 0.1
    if (y + 3 >= len(array)):
        j = -g / 10
    else:
        h = (array[y + 2] - array[y]) / (tab[y + 2][0] - tab[y][0])
        j = (h - g) / (10 * (tab[y + 1][0] - tab[y][0]))
    g = g + j
    while (i - 0.05 < tab[y + 1][0]):
        print("%.1f ml -> %.2f" % (i, g))
        g = g + j
        i = i + 0.1
        if (math.fabs(d) > math.fabs(g) and y + 3 < len(tab)):
            d = g
            e = i
    print("\nEquivalent point at %.1f ml" % e)
sys.exit(0)